function killprocess {
  ### PROCESS
  # show output of "ps -ef", use [tab] to select one or multiple entries
  # press [enter] to kill selected processes and exit.
  # or press [escape] to exit completely.

  local pid=$(ps -ef | sed 1d | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[kill:process]'" | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}
alias kp=killprocess


function findpath {
  ### PATH
  # list directories in $PATH, press [enter] on an entry to list the executables inside.
  # press [escape] to exit.

  local loc=$(echo $PATH | sed -e $'s/:/\\\n/g' | eval "fzf ${FZF_DEFAULT_OPTS} --header='[find:path]'")

  if [[ -d $loc ]]; then
    echo "$(rg --files $loc | rev | cut -d"/" -f1 | rev)" | eval "fzf ${FZF_DEFAULT_OPTS} --header='[find:exe] => ${loc}' >/dev/null"
  fi
}
alias fp=findpath


function brewinstallplugin {
  ### BREW + FZF
  # update multiple packages at once
  # mnemonic [B]rew [I]nstall [P]lugin

  local inst=$(brew search | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[brew:install]'")

  if [[ $inst ]]; then
    for prog in $(echo $inst)
    do brew install $prog
    done
  fi
}
alias bip=brewinstallplugin


function brewupdateplugin {
  ### BREW + FZF
  # uninstall multiple packages at once, async
  # mnemonic [B]rew [U]pdate [P]lugin

  local upd=$(brew leaves | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[brew:update]'")

  if [[ $upd ]]; then
    for prog in $(echo $upd)
    do brew upgrade $prog
    done
  fi
}
alias bup=brewupdateplugin


function brewcleanplugin {
  ### BREW + FZF
  # mnemonic [B]rew [C]lean [P]lugin (e.g. uninstall)

  local uninst=$(brew leaves | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[brew:clean]'")

  if [[ $uninst ]]; then
    for prog in $(echo $uninst)
    do brew uninstall $prog
    done
  fi
}
alias bcp=brewcleanplugin
